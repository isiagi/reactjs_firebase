{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Signup.js","components/Dashboard.js","components/Login.js","components/PrivateRoute.js","components/ForgotPassword.js","components/UpdateProfile.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","forgotPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","a","preventDefault","current","push","console","log","Card","Body","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","className","to","Dashboard","onClick","Login","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","UpdateProfile","promises","Promise","all","then","catch","finally","defaultValue","placeholder","App","Container","style","minHeight","minWidth","path","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"iQAGMA,G,MAAMC,IAASC,cAAc,CAC/BC,OAAQC,0CACRC,WAAYD,gCACZE,UAAWF,gBACXG,cAAeH,4BACfI,kBAAmBJ,cACnBK,MAAOL,2CACPM,cAAeN,kBAINO,EAAOX,EAAIW,O,OCXlBC,EAAcC,IAAMC,gBAEnB,SAASC,IACZ,OAAOC,qBAAWJ,GAIf,SAASK,EAAT,GAAmC,IAAZC,EAAW,EAAXA,SAAW,EACCC,qBADD,mBAC9BC,EAD8B,KACjBC,EADiB,OAEPF,oBAAS,GAFF,mBAE9BG,EAF8B,KAErBC,EAFqB,KA4BrCC,qBAAU,WAMN,OALoBb,EAAKc,oBAAmB,SAAAC,GACxCL,EAAeK,GACfH,GAAW,QAIhB,IAGH,IAAMI,EAAQ,CACVP,cACAQ,OApCJ,SAAgBC,EAAOC,GACnB,OAAOnB,EAAKoB,+BAA+BF,EAAOC,IAoClDE,MAjCJ,SAAeH,EAAOC,GAClB,OAAOnB,EAAKsB,2BAA2BJ,EAAOC,IAiC9CI,OA9BJ,WACI,OAAOvB,EAAKwB,WA8BZC,eA3BJ,SAAwBP,GACpB,OAAOlB,EAAK0B,uBAAuBR,IA2BnCS,YAxBJ,SAAqBT,GACjB,OAAOT,EAAYkB,YAAYT,IAwB/BU,eArBJ,SAAwBT,GACpB,OAAOV,EAAYmB,eAAeT,KAsBtC,OACI,cAAClB,EAAY4B,SAAb,CAAsBb,MAAOA,EAA7B,UACML,GAAWJ,ICIVuB,MA1Df,WACI,IAAMC,EAAWC,mBACXC,EAAcD,mBACdE,EAAqBF,mBACnBf,EAAWb,IAAXa,OAJM,EAKWT,mBAAS,IALpB,mBAKR2B,EALQ,KAKDC,EALC,OAMe5B,oBAAS,GANxB,mBAMRG,EANQ,KAMCC,EAND,KAORyB,EAAUC,cAPF,4CASd,WAA2BC,GAA3B,SAAAC,EAAA,yDACID,EAAEE,iBAECR,EAAYS,QAAQ1B,QAAUkB,EAAmBQ,QAAQ1B,MAHhE,yCAIeoB,EAAS,0BAJxB,uBAQQA,EAAS,IACTxB,GAAW,GATnB,SAUcK,EAAOc,EAASW,QAAQ1B,MAAOiB,EAAYS,QAAQ1B,OAVjE,OAWQqB,EAAQM,KAAK,KAXrB,kDAaQC,QAAQC,IAAR,MACAT,EAAS,+BAdjB,QAiBIxB,GAAW,GAjBf,2DATc,sBA4Bd,OACI,qCACG,cAACkC,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACI,yCACCZ,GAAS,cAACa,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBd,IACnC,eAACe,EAAA,EAAD,CAAMC,SAlCP,4CAkCC,UACI,eAACD,EAAA,EAAKE,MAAN,CAAYC,GAAG,QAAf,UACI,cAACH,EAAA,EAAKI,MAAN,oBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,QAAQC,IAAK1B,EAAU2B,UAAQ,OAEtD,eAACR,EAAA,EAAKE,MAAN,CAAYC,GAAG,WAAf,UACI,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,WAAWC,IAAKxB,EAAayB,UAAQ,OAE5D,eAACR,EAAA,EAAKE,MAAN,CAAYC,GAAG,mBAAf,UACI,cAACH,EAAA,EAAKI,MAAN,+BACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,WAAWC,IAAKvB,EAAoBwB,UAAQ,OAEnE,cAACC,EAAA,EAAD,CAAQC,SAAUjD,EAASkD,UAAU,aAAaL,KAAK,SAAvD,6BAIZ,sBAAKK,UAAU,yBAAf,sCAC8B,cAAC,IAAD,CAAMC,GAAG,SAAT,2BCrB1BC,MA/Bf,WAAsB,IAAD,EACQvD,mBAAS,IADjB,mBACX2B,EADW,KACJC,EADI,OAEehC,IAAxBK,EAFS,EAETA,YAAac,EAFJ,EAEIA,OACfc,EAAUC,cAHC,4CAKjB,sBAAAE,EAAA,6DACIJ,EAAS,KADb,kBAGab,IAHb,OAIOc,EAAQM,KAAK,UAJpB,gDAMQP,EAAS,qBANjB,0DALiB,sBAcjB,OACI,qCACA,cAACU,EAAA,EAAD,UACA,eAACA,EAAA,EAAKC,KAAN,WACI,oBAAIc,UAAU,mBAAd,qBACC1B,GAAS,cAACa,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBd,IACnC,4CAHJ,IAG6B1B,EAAYS,MACrC,cAAC,IAAD,CAAM4C,GAAG,kBAAkBD,UAAU,6BAArC,iCAGJ,qBAAKA,UAAU,yBAAf,SACQ,cAACF,EAAA,EAAD,CAAQV,QAAQ,OAAOe,QAzBlB,2CAyBL,2BC4BDC,MApDf,WACI,IAAMlC,EAAWC,mBACXC,EAAcD,mBACZX,EAAUjB,IAAViB,MAHK,EAIYb,mBAAS,IAJrB,mBAIP2B,EAJO,KAIAC,EAJA,OAKgB5B,oBAAS,GALzB,mBAKPG,EALO,KAKEC,EALF,KAMPyB,EAAUC,cANH,4CAQb,WAA2BC,GAA3B,SAAAC,EAAA,6DACID,EAAEE,iBADN,SAIQL,EAAS,IACTxB,GAAW,GALnB,SAMcS,EAAMU,EAASW,QAAQ1B,MAAOiB,EAAYS,QAAQ1B,OANhE,OAOQqB,EAAQM,KAAK,KAPrB,gDASQC,QAAQC,IAAR,MACAT,EAAS,4BAVjB,QAaIxB,GAAW,GAbf,0DARa,sBAuBb,OACI,qCACG,cAACkC,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACI,oBAAIc,UAAU,mBAAd,mBACC1B,GAAS,cAACa,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBd,IACnC,eAACe,EAAA,EAAD,CAAMC,SA7BR,4CA6BE,UACI,eAACD,EAAA,EAAKE,MAAN,CAAYC,GAAG,QAAf,UACI,cAACH,EAAA,EAAKI,MAAN,oBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,QAAQC,IAAK1B,EAAU2B,UAAQ,OAEtD,eAACR,EAAA,EAAKE,MAAN,CAAYC,GAAG,WAAf,UACI,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,WAAWC,IAAKxB,EAAayB,UAAQ,OAE5D,cAACC,EAAA,EAAD,CAAQC,SAAUjD,EAASkD,UAAU,aAAaL,KAAK,SAAvD,oBACA,qBAAKK,UAAU,yBAAf,SACK,cAAC,IAAD,CAAMC,GAAG,mBAAT,wCAKjB,sBAAKD,UAAU,yBAAf,gCACwB,cAAC,IAAD,CAAMC,GAAG,UAAT,4B,wBCrCpBI,MAXf,YAAwD,IAAtBC,EAAqB,EAAhCC,UAAyBC,EAAO,6BAC3C5D,EAAgBL,IAAhBK,YACR,OACI,cAAC,IAAD,2BAAW4D,GAAX,IAAiBC,OAAQ,SAAAC,GACrB,OAAO9D,EAAc,cAAC0D,EAAD,eAAeI,IAAY,cAAC,IAAD,CAAUT,GAAG,gBC+C1DU,MAjDf,WACI,IAAMzC,EAAWC,mBACTP,EAAmBrB,IAAnBqB,eAFc,EAGIjB,mBAAS,IAHb,mBAGf2B,EAHe,KAGRC,EAHQ,OAIQ5B,oBAAS,GAJjB,mBAIfG,EAJe,KAINC,EAJM,OAKQJ,mBAAS,IALjB,mBAKfiE,EALe,KAKNC,EALM,iDAOtB,WAA2BnC,GAA3B,SAAAC,EAAA,6DACID,EAAEE,iBADN,SAIQiC,EAAW,IACXtC,EAAS,IACTxB,GAAW,GANnB,SAOca,EAAeM,EAASW,QAAQ1B,OAP9C,OAQQ0D,EAAW,6CARnB,kDAUQ9B,QAAQC,IAAR,MACAT,EAAS,4BAXjB,QAcIxB,GAAW,GAdf,2DAPsB,sBAuBtB,OACI,qCACG,cAACkC,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACI,oBAAIc,UAAU,mBAAd,4BACC1B,GAAS,cAACa,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBd,IAClCsC,GAAW,cAACzB,EAAA,EAAD,CAAOC,QAAQ,UAAf,SAA0BwB,IACtC,eAACvB,EAAA,EAAD,CAAMC,SA9BC,4CA8BP,UACI,eAACD,EAAA,EAAKE,MAAN,CAAYC,GAAG,QAAf,UACI,cAACH,EAAA,EAAKI,MAAN,oBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,QAAQC,IAAK1B,EAAU2B,UAAQ,OAEtD,cAACC,EAAA,EAAD,CAAQC,SAAUjD,EAASkD,UAAU,aAAaL,KAAK,SAAvD,6BACA,qBAAKK,UAAU,yBAAf,SACK,cAAC,IAAD,CAAMC,GAAG,SAAT,6BAKjB,sBAAKD,UAAU,yBAAf,gCACwB,cAAC,IAAD,CAAMC,GAAG,UAAT,4BCsBpBa,MAlEf,WACI,IAAM5C,EAAWC,mBACXC,EAAcD,mBACdE,EAAqBF,mBAHN,EAIgC5B,IAA7CK,EAJa,EAIbA,YAAckB,EAJD,EAICA,YAAaC,EAJd,EAIcA,eAJd,EAKIpB,mBAAS,IALb,mBAKf2B,EALe,KAKRC,EALQ,OAMQ5B,oBAAS,GANjB,mBAMfG,EANe,KAMNC,EANM,KAOfyB,EAAUC,cA6BhB,OACI,qCACG,cAACQ,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACI,oBAAIc,UAAU,mBAAd,4BACC1B,GAAS,cAACa,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBd,IACnC,eAACe,EAAA,EAAD,CAAMC,SAjCrB,SAAqBZ,GAGjB,GAFAA,EAAEE,iBAECR,EAAYS,QAAQ1B,QAAUkB,EAAmBQ,QAAQ1B,MACxD,OAAOoB,EAAS,yBAGpB,IAAMwC,EAAW,GACjBxC,EAAS,IACTxB,GAAW,GAERmB,EAASW,QAAQ1B,QAAUP,EAAYS,OACtC0D,EAASjC,KAAKhB,EAAYI,EAASW,QAAQ1B,QAE5CiB,EAAYS,QAAQ1B,OACnB4D,EAASjC,KAAKf,EAAeK,EAAYS,QAAQ1B,QAGrD6D,QAAQC,IAAIF,GAAUG,MAAK,WACvB1C,EAAQM,KAAK,QACdqC,OAAM,WACL5C,EAAS,uBACV6C,SAAQ,WACPrE,GAAW,OAUJ,UACI,eAACsC,EAAA,EAAKE,MAAN,CAAYC,GAAG,QAAf,UACI,cAACH,EAAA,EAAKI,MAAN,oBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,QAAQC,IAAK1B,EAAU2B,UAAQ,EAACwB,aAAczE,EAAYS,WAEjF,eAACgC,EAAA,EAAKE,MAAN,CAAYC,GAAG,WAAf,UACI,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,WAAWC,IAAKxB,EAAakD,YAAY,gCAEhE,eAACjC,EAAA,EAAKE,MAAN,CAAYC,GAAG,mBAAf,UACI,cAACH,EAAA,EAAKI,MAAN,+BACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,WAAWC,IAAKvB,EAAoBiD,YAAY,gCAEvE,cAACxB,EAAA,EAAD,CAAQC,SAAUjD,EAASkD,UAAU,aAAaL,KAAK,SAAvD,oCAIZ,qBAAKK,UAAU,yBAAf,SACM,cAAC,IAAD,CAAMC,GAAG,IAAT,0BCjCFsB,MApBf,WACE,OACE,cAACC,EAAA,EAAD,CAAWxB,UAAU,mDAAmDyB,MAAO,CAACC,UAAW,SAA3F,SACE,qBAAK1B,UAAU,QAAQyB,MAAO,CAACE,SAAU,SAAzC,SACF,cAAClF,EAAD,UACA,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmF,KAAK,UAAUrB,UAAWtC,IACjC,cAAC,EAAD,CAAc4D,OAAK,EAACD,KAAK,aAAarB,UAAWL,IACjD,cAAC,EAAD,CAAc2B,OAAK,EAACD,KAAK,kBAAkBrB,UAAWO,IACtD,cAAC,IAAD,CAAOc,KAAK,IAAIrB,UAAWH,IAC3B,cAAC,IAAD,CAAOwB,KAAK,mBAAmBrB,UAAWI,gB,MClBlDmB,IAASrB,OACP,cAAC,IAAMsB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.aa7cee01.chunk.js","sourcesContent":["import firebase from 'firebase'\nimport 'firebase/auth'\n\nconst app = firebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n})\n\n\nexport const auth = app.auth()\nexport default app\n\n\n\n\n\n\n\n\n\n\n\n","import React, {useContext, useState, useEffect} from 'react'\nimport {auth} from '../firebase'\n\nconst AuthContext = React.createContext()\n\nexport function useAuth(){\n    return useContext(AuthContext)\n}\n\n\nexport function AuthProvider({children}) {\n    const [currentUser, setCurrentUser] = useState()\n    const [loading, setLoading] = useState(true)\n\n    function signup(email, password){\n        return auth.createUserWithEmailAndPassword(email, password)\n    }\n\n    function login(email, password){\n        return auth.signInWithEmailAndPassword(email, password)\n    }\n\n    function logout(){\n        return auth.signOut()\n    }\n\n    function forgotPassword(email){\n        return auth.sendPasswordResetEmail(email)\n    }\n\n    function updateEmail(email){\n        return currentUser.updateEmail(email)\n    }\n\n    function updatePassword(password){\n        return currentUser.updatePassword(password)\n    }\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            setCurrentUser(user)\n            setLoading(false)\n        })\n\n        return unsubscribe\n    }, [])\n\n\n    const value = {\n        currentUser,\n        signup,\n        login,\n        logout,\n        forgotPassword,\n        updateEmail,\n        updatePassword\n    }\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    )\n}\n\n","import React, {useRef, useState} from 'react'\nimport {Card, Button, Form, Alert} from 'react-bootstrap'\nimport { Link, useHistory } from 'react-router-dom'\nimport {useAuth} from '../contexts/AuthContext'\n\nfunction Signup() {\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const passwordConfirmRef = useRef()\n    const { signup } = useAuth()\n    const[error, setError] = useState('')\n    const[loading, setLoading] = useState(false)\n    const history = useHistory()\n\n    async function handlSubmit(e){\n        e.preventDefault()\n\n        if(passwordRef.current.value !== passwordConfirmRef.current.value){\n            return setError('Passwors do not match')\n        }\n\n        try {\n            setError('')\n            setLoading(true)\n            await signup(emailRef.current.value, passwordRef.current.value)\n            history.push(\"/\")\n        } catch (error) {\n            console.log(error);\n            setError('Failed to create an account')\n        }\n\n        setLoading(false)\n    }\n    return (\n        <>\n           <Card>\n               <Card.Body>\n                   <h2>Sign Up</h2>\n                   {error && <Alert variant=\"danger\">{error}</Alert>}\n                   <Form onSubmit={handlSubmit}>\n                       <Form.Group id=\"email\">\n                           <Form.Label>Email</Form.Label>\n                           <Form.Control type=\"email\" ref={emailRef} required/>\n                       </Form.Group>\n                       <Form.Group id=\"password\">\n                           <Form.Label>Password</Form.Label>\n                           <Form.Control type=\"password\" ref={passwordRef} required/>\n                       </Form.Group>\n                       <Form.Group id=\"password-confirm\">\n                           <Form.Label>Confirm Password</Form.Label>\n                           <Form.Control type=\"password\" ref={passwordConfirmRef} required/>\n                       </Form.Group>\n                       <Button disabled={loading} className=\"w-100 mt-2\" type=\"submit\">Sign Up</Button>\n                   </Form>\n               </Card.Body>\n           </Card> \n           <div className=\"w-100 text-center mt-2\">\n                Already have an account? <Link to=\"/login\">Log in</Link>\n           </div>\n        </>\n    )\n}\n\nexport default Signup\n","import React, { useState } from 'react'\nimport {Card, Button, Alert} from 'react-bootstrap'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useAuth } from '../contexts/AuthContext'\n\nfunction Dashboard() {\n    const[error, setError] = useState(\"\")\n    const { currentUser, logout } = useAuth()\n    const history = useHistory()\n\n    async function handleLogOut(){\n        setError(\" \")\n        try {\n           await logout() \n           history.push('/login')\n        } catch (error) {\n            setError('Failed to Log out')\n        }\n    }\n    return (\n        <>\n        <Card>\n        <Card.Body>\n            <h2 className=\"text-center mb-4\">Profile</h2>\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            <strong>Email:</strong> {currentUser.email}\n            <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">Update profile</Link>\n            </Card.Body>\n        </Card>\n        <div className=\"w-100 text-center mt-2\">\n                <Button variant=\"link\" onClick={handleLogOut}>Log Out</Button>\n           </div>\n        </>\n    )\n}\n\nexport default Dashboard\n","import React, {useRef, useState } from 'react'\nimport {Card, Button, Form, Alert} from 'react-bootstrap'\nimport { Link, useHistory } from 'react-router-dom'\nimport {useAuth} from '../contexts/AuthContext'\n\n\nfunction Login() {\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const { login } = useAuth()\n    const[error, setError] = useState('')\n    const[loading, setLoading] = useState(false)\n    const history = useHistory()\n\n    async function handlSubmit(e){\n        e.preventDefault()\n\n        try {\n            setError('')\n            setLoading(true)\n            await login(emailRef.current.value, passwordRef.current.value)\n            history.push(\"/\")\n        } catch (error) {\n            console.log(error);\n            setError('Failed to log in account')\n        }\n\n        setLoading(false)\n    }\n    return (\n        <>\n           <Card>\n               <Card.Body>\n                   <h2 className=\"text-center mb-4\">Login</h2>\n                   {error && <Alert variant=\"danger\">{error}</Alert>}\n                   <Form onSubmit={handlSubmit}>\n                       <Form.Group id=\"email\">\n                           <Form.Label>Email</Form.Label>\n                           <Form.Control type=\"email\" ref={emailRef} required/>\n                       </Form.Group>\n                       <Form.Group id=\"password\">\n                           <Form.Label>Password</Form.Label>\n                           <Form.Control type=\"password\" ref={passwordRef} required/>\n                       </Form.Group>\n                       <Button disabled={loading} className=\"w-100 mt-2\" type=\"submit\">Log in</Button>\n                       <div className=\"w-100 text-center mt-3\">\n                            <Link to=\"/forgot-password\">Forgot Password?</Link>\n                        </div>\n                   </Form>\n               </Card.Body>\n           </Card> \n           <div className=\"w-100 text-center mt-2\">\n                Create an account? <Link to=\"/signup\">Sign up</Link>\n           </div>\n        </>\n    )\n}\n\nexport default Login\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useAuth } from '../contexts/AuthContext'\n\nfunction PrivateRoute({component: Component, ...rest}) {\n    const { currentUser } = useAuth()\n    return (\n        <Route {...rest} render={props => {\n            return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\n        }}>\n\n        </Route>\n    )\n}\n\nexport default PrivateRoute\n","import React, {useRef, useState } from 'react'\nimport {Card, Button, Form, Alert} from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport {useAuth} from '../contexts/AuthContext'\n\n\nfunction ForgotPassword() {\n    const emailRef = useRef()\n    const { forgotPassword } = useAuth()\n    const [error, setError] = useState('')\n    const [loading, setLoading] = useState(false)\n    const [message, setMessage] = useState(\"\")\n\n    async function handlSubmit(e){\n        e.preventDefault()\n\n        try {\n            setMessage(\"\")\n            setError('')\n            setLoading(true)\n            await forgotPassword(emailRef.current.value)\n            setMessage(\"Check your inbox for further instructions\")\n        } catch (error) {\n            console.log(error);\n            setError('Failed to Reset Password')\n        }\n\n        setLoading(false)\n    }\n    return (\n        <>\n           <Card>\n               <Card.Body>\n                   <h2 className=\"text-center mb-4\">Password Reset</h2>\n                   {error && <Alert variant=\"danger\">{error}</Alert>}\n                   {message && <Alert variant=\"success\">{message}</Alert>}\n                   <Form onSubmit={handlSubmit}>\n                       <Form.Group id=\"email\">\n                           <Form.Label>Email</Form.Label>\n                           <Form.Control type=\"email\" ref={emailRef} required/>\n                       </Form.Group>\n                       <Button disabled={loading} className=\"w-100 mt-2\" type=\"submit\">Reset Passwaord</Button>\n                       <div className=\"w-100 text-center mt-3\">\n                            <Link to=\"/login\">Login</Link>\n                        </div>\n                   </Form>\n               </Card.Body>\n           </Card> \n           <div className=\"w-100 text-center mt-2\">\n                Create an account? <Link to=\"/signup\">Sign up</Link>\n           </div>\n        </>\n    )\n}\n\nexport default ForgotPassword\n","import React, {useRef, useState} from 'react'\nimport {Card, Button, Form, Alert} from 'react-bootstrap'\nimport { Link, useHistory } from 'react-router-dom'\nimport {useAuth} from '../contexts/AuthContext'\n\nfunction UpdateProfile() {\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const passwordConfirmRef = useRef()\n    const { currentUser,  updateEmail, updatePassword} = useAuth()\n    const[error, setError] = useState('')\n    const[loading, setLoading] = useState(false)\n    const history = useHistory()\n\n    function handlSubmit(e){\n        e.preventDefault()\n\n        if(passwordRef.current.value !== passwordConfirmRef.current.value){\n            return setError('Passwors do not match')\n        }\n\n        const promises = []\n        setError('')\n        setLoading(true)\n\n        if(emailRef.current.value !== currentUser.email){\n            promises.push(updateEmail(emailRef.current.value))\n        }\n        if(passwordRef.current.value){\n            promises.push(updatePassword(passwordRef.current.value))\n        }\n\n        Promise.all(promises).then(() => {\n            history.push(\"/\")\n        }).catch(() => {\n            setError(\"Failed to Update\")\n        }).finally(() => {\n            setLoading(false)\n        })\n    }\n\n    return (\n        <>\n           <Card>\n               <Card.Body>\n                   <h2 className=\"text-center mt-2\" >Update Profile</h2>\n                   {error && <Alert variant=\"danger\">{error}</Alert>}\n                   <Form onSubmit={handlSubmit}>\n                       <Form.Group id=\"email\">\n                           <Form.Label>Email</Form.Label>\n                           <Form.Control type=\"email\" ref={emailRef} required defaultValue={currentUser.email}/>\n                       </Form.Group>\n                       <Form.Group id=\"password\">\n                           <Form.Label>Password</Form.Label>\n                           <Form.Control type=\"password\" ref={passwordRef} placeholder=\"Leave blank to keep same\" />\n                       </Form.Group>\n                       <Form.Group id=\"password-confirm\">\n                           <Form.Label>Confirm Password</Form.Label>\n                           <Form.Control type=\"password\" ref={passwordConfirmRef} placeholder=\"Leave blank to keep same\" />\n                       </Form.Group>\n                       <Button disabled={loading} className=\"w-100 mt-2\" type=\"submit\">Update Profile</Button>\n                   </Form>\n               </Card.Body>\n           </Card> \n           <div className=\"w-100 text-center mt-2\">\n                 <Link to=\"/\">Cancel</Link>\n           </div>\n        </>\n    )\n}\n\nexport default UpdateProfile\n","import React from 'react'\nimport './App.css';\nimport Signup from './components/Signup'\nimport Dashboard from './components/Dashboard'\nimport Login from './components/Login'\nimport { Container} from 'react-bootstrap'\nimport { AuthProvider } from './contexts/AuthContext'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport PrivateRoute from './components/PrivateRoute'\nimport ForgotPassword from './components/ForgotPassword'\nimport UpdateProfile from './components/UpdateProfile';\n\nfunction App() {\n  return (\n    <Container className=\"d-flex align-items-center justify-content-center\" style={{minHeight: '100vh'}}>\n      <div className=\"w-100\" style={{minWidth: '400px'}}>\n    <AuthProvider>\n    <Router>\n      <Switch>\n        <Route path=\"/signup\" component={Signup} />\n        <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n        <PrivateRoute exact path=\"/update-profile\" component={UpdateProfile} />\n        <Route path=\"/\" component={Login} />\n        <Route path=\"/forgot-password\" component={ForgotPassword} />\n      </Switch>\n    </Router>\n    </AuthProvider>\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}